=============================================================
====    written by Maurits W. Haverkort,                 ====
====    Yi Lu, Robert Green, Sebastian Macke,            ====
====    Marius Retegan, Martin Brass, and Simon Heinze   ====
====    (cc) 1995 - 2022 code and binaries released      ====
====    under creative commons CC-BY lisence             ====
====    www.quanty.org                                   ====
====    Beta version, be critical and report errors!!!   ====
=============================================================
====    Version 0.7 beta                                 ====
====            compiled at: May 16 2023 at 15:19:14     ====
=============================================================
====    When used in scientific publications please cite ====
====    one of the following papers as appropriate with  ====
====    respect to the methods used in your publication: ====
====    Phys. Rev. B 85, 165113 (2012)                   ====
====    Phys. Rev. B 90, 085102 (2014)                   ====
====    Euro Phys. Lett. 108, 57004 (2014)               ====
====    J. of Phys.: Conf. Series 712, 012001 (2016)     ====
====    New Journal of Physics 22 (9), 093018 (2020)     ====
=============================================================
Program executed on: Wed May 21 18:17:52 2025
Running on host    : macchiato.phys.washington.edu
number of available processors              : 48
maximum number of threads in parallel region: 4
Smallest positive float  : 2.225074E-308 
Smallest deviation from 1: 2.220446E-16 

--Read FPLO output--

--Create the Tight Binding Hamiltonian--

Create the tight binding Hamiltonian for the crystal


 Temp Cluster
{ { Ni , 
  { 0 , 0 , 0 } , 
  { { 3d , 
  { d_{xy} , d_{yz} , d_{3z^2-r^2} , d_{xz} , d_{x^2-y^2} } } } } , 
  { O , 
  { 0 , 0 , -3.9841280897427 } , 
  { { 2p , 
  { p_y , p_z , p_x } } } } , 
  { O , 
  { 0 , -3.9841280897427 , 0 } , 
  { { 2p , 
  { p_y , p_z , p_x } } } } , 
  { O , 
  { 3.9841280897427 , 0 , 0 } , 
  { { 2p , 
  { p_y , p_z , p_x } } } } , 
  { O , 
  { -3.9841280897427 , 0 , 0 } , 
  { { 2p , 
  { p_y , p_z , p_x } } } } , 
  { O , 
  { 0 , 3.9841280897427 , 0 } , 
  { { 2p , 
  { p_y , p_z , p_x } } } } , 
  { O , 
  { 0 , 0 , 3.9841280897427 } , 
  { { 2p , 
  { p_y , p_z , p_x } } } } }

 Cluster Sorted
{ { Ni , 
  { 0 , 0 , 0 } , 
  { { 3d , 
  { d_{xy} , d_{yz} , d_{3z^2-r^2} , d_{xz} , d_{x^2-y^2} } } } } , 
  { O , 
  { 0 , 0 , -3.9841280897427 } , 
  { { 2p , 
  { p_y , p_z , p_x } } } } , 
  { O , 
  { 0 , -3.9841280897427 , 0 } , 
  { { 2p , 
  { p_y , p_z , p_x } } } } , 
  { O , 
  { 3.9841280897427 , 0 , 0 } , 
  { { 2p , 
  { p_y , p_z , p_x } } } } , 
  { O , 
  { -3.9841280897427 , 0 , 0 } , 
  { { 2p , 
  { p_y , p_z , p_x } } } } , 
  { O , 
  { 0 , 3.9841280897427 , 0 } , 
  { { 2p , 
  { p_y , p_z , p_x } } } } , 
  { O , 
  { 0 , 0 , 3.9841280897427 } , 
  { { 2p , 
  { p_y , p_z , p_x } } } } }
{ { -1.269 ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     } ,
  {  0     , -1.269 ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     } ,
  {  0     ,  0     , -1.269 ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     } ,
  {  0     ,  0     ,  0     , -1.269 ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     } ,
  {  0     ,  0     ,  0     ,  0     , -1.085 ,  0     ,  0     ,  0     ,  0     ,  0     } ,
  {  0     ,  0     ,  0     ,  0     ,  0     , -1.085 ,  0     ,  0     ,  0     ,  0     } ,
  {  0     ,  0     ,  0     ,  0     ,  0     ,  0     , -1.269 ,  0     ,  0     ,  0     } ,
  {  0     ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     , -1.269 ,  0     ,  0     } ,
  {  0     ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     , -1.085 ,  0     } ,
  {  0     ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     ,  0     , -1.085 } }

10
16
The indices of the system are now fixed:
{ All = { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 } ,
  Ni_3d = { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 } ,
  Ni_3d_Dn = { 0 , 2 , 4 , 6 , 8 } ,
  all = { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 11 , 12 , 13 , 14 , 15 } ,
  Ni = { 10 , 11 , 12 , 13 , 14 , 15 , 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 } ,
  Ni_2p_Up = { 11 , 13 , 15 } ,
  Ni_2p_Dn = { 10 , 12 , 14 } ,
  Ni_3d_Up = { 1 , 3 , 5 , 7 , 9 } ,
  Ni_2p = { 10 , 11 , 12 , 13 , 14 , 15 } }

--Subtract the DFT Mean-field Coulomb interaction between the d electrons from the tight-binding Hamiltonian--

Calculate the DFT 1-particle density matrix

{ { 0.9895874414103 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } , 
  { 0 , 0.9895874414103 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } , 
  { 0 , 0 , 0.98958744141031 , 0 , 0 , 0 , 0 , 0 , 0 , 0 } , 
  { 0 , 0 , 0 , 0.98958744141031 , 0 , 0 , 0 , 0 , 0 , 0 } , 
  { 0 , 0 , 0 , 0 , 0.6650661519633 , 0 , 0 , 0 , 0 , 0 } , 
  { 0 , 0 , 0 , 0 , 0 , 0.6650661519633 , 0 , 0 , 0 , 0 } , 
  { 0 , 0 , 0 , 0 , 0 , 0 , 0.9895874414103 , 0 , 0 , 0 } , 
  { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0.9895874414103 , 0 , 0 } , 
  { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0.66506615196324 , 0 } , 
  { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0.66506615196324 } }
Create the Coulomb operator for the d-shell

Create the Coulomb operator between the p- and d-shell

Create the Coulomb operator for the d-shell using the mean-field approximation (needs the DFT density)

--Set the parameters--

Parameters:
nd = 8
Delta fit to exp = 2 eV
Udd fit to exp= 5 eV
Upd fit to exp = 6 eV
Bz = 5.7883818011084e-06 eV
zeta_3d = 0.082586623136141 eV
zeta_2p = 11.505663567558 eV

Slater integrals computed from DFT radial wavefunctions:
F0dd ab initio = 25.870685450478 eV
F2dd = 11.691083504322 eV
F4dd = 7.2214068575626 eV
F0pd ab initio = 36.80674699588 eV
F2pd = 6.9241935340766 eV
G1pd = 5.1498818159701 eV
G3pd = 2.9266354717674 eV

Monopole like Slater integrals (from U):
F0dd fit to exp = 5.6003965194249 eV
F0pd fit to exp = 6.4687526889023 eV


Warning: Without a specified density the matrix representation can only be found for the quadratic part of an operator, all other parts will be ignored.
--Define some additional operators--

--Define Intermediate State Hamiltonian--

--Define XAS-Hamiltonian--


--Compute eigenstates--
Npsi
21
Start of BlockGroundState. Converge 21 states to an energy with relative variance smaller than  1.000000000000000E-06

Start of BlockOperatorPsiSerialRestricted
Outer loop   1, Number of Determinants:        45        45 last variance  2.266836946811964E+00
Start of BlockOperatorPsiSerialRestricted
Start of BlockGroundState. Converge 21 states to an energy with relative variance smaller than  1.000000000000000E-06

Start of BlockOperatorPsiSerial
{ 16 , 0 , 
  { 1111111111000000 , 8 , 8 } , 
  { 0000000000111111 , 6 , 6 } }

dZ
1.4424855782456e-15

--Initial State Energies--
{ -49.68216784263 , -49.682152594989 , -49.682137347213 , -49.299485477602 , -49.299485462566 , -49.275906293715 , -49.275902428331 , -49.275898591697 , -49.204034395941 , -49.204028884305 , -49.204023356713 , -49.191453262159 , -49.036998926787 , -48.952864908784 , -48.952863011122 , -48.952861118684 , -48.836614435633 , -48.836610980021 , -48.836607522853 , -48.819356286249 , -48.819356286138 }

--Create the Spectra--

0.99999999999859
0.99939628613833
0.99879293135322
2.6159435163774e-07
Spectra printed to file: XAS_sticks.dat
Spectra printed to file: XAS.dat
Spectra printed to file: XAS_zpol_sticks.dat
Spectra printed to file: XAS_xpol_sticks.dat
Spectra printed to file: XAS_ypol_sticks.dat
Spectra printed to file: XAS_rpol_zdir_sticks.dat
Spectra printed to file: XAS_lpol_zdir_sticks.dat
Spectra printed to file: XAS_rpol_ydir_sticks.dat
Spectra printed to file: XAS_lpol_ydir_sticks.dat
Spectra printed to file: XAS_rpol_xdir_sticks.dat
Spectra printed to file: XAS_lpol_xdir_sticks.dat
Spectra printed to file: XAS_zpol.dat
Spectra printed to file: XAS_xpol.dat
Spectra printed to file: XAS_ypol.dat
Spectra printed to file: XAS_rpol_zdir.dat
Spectra printed to file: XAS_lpol_zdir.dat
Spectra printed to file: XAS_rpol_ydir.dat
Spectra printed to file: XAS_lpol_ydir.dat
Spectra printed to file: XAS_rpol_xdir.dat
Spectra printed to file: XAS_lpol_xdir.dat
Finished
